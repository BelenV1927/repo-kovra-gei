object juego {
	var cartas_mesa=[]
	var cartas_mano_jugador=[]
	var cartas_mano_maquina=[]
	var cartas_mazo=[]
	var monto_jugador=[]
	var monto_maquina=[]
	var aux=0
	var turno=1
	method crear_mazo() {
		(1..10).forEach({n => cartas_mazo.add(new Cartas("oro",n))})
		(1..10).forEach({n => cartas_mazo.add(new Cartas("espada",n))})
		(1..10).forEach({n => cartas_mazo.add(new Cartas("basto",n))})
		(1..10).forEach({n => cartas_mazo.add(new Cartas("copa",n))})
	}
	method repartir_cartas_a_mesa() {
		aux= cartas_mazo.anyOne()
		cartas_mazo.remove(aux)
		cartas_mesa.add(aux)
	}
	method repartir_cartas_a_jugador() {
		aux=cartas_mazo.anyOne()
		cartas_mazo.remove(aux)
		cartas_mano_jugador.add(aux)
	}
	method repartir_cartas_a_maquina() {
		aux=cartas_mazo.anyOne()
		cartas_mazo.remove(aux)
		cartas_mano_maquina.add(aux)
	}
	method repartir_a_jugadores () {
		(1..3).forEach{self.repartir_cartas_a_jugador()}
		(1..3).forEach{self.repartir_cartas_a_maquina()}
	}
	method repartir_todo() {
		self.repartir_a_jugadores()
		(1..4).forEach{self.repartir_cartas_a_mesa()}
	}
	//method jugador_dejar_carta(nombre) {
		//aux = cartas_mano_jugador.filter({ nombre => cartas_mano_jugador.quiensoy() })
	//}
	method ver_cartas_jugador() {
		return cartas_mano_jugador
	}
	method ver_cartas_mesa() {
		return cartas_mesa
	}
	method cambiar_turno(){
		turno * -1
	}
}

class Cartas {
	var valor
	var palo
	var nombre
	constructor (_palo,_valor) {
		palo= _palo
		valor= _valor
	}
	method quiensoy(){
		if (valor < 10 ) {
		return valor + "de" + palo
		}
		else {
			if (valor == 10) {
				return "Sota" + "de" + palo
			}
			else {
				if (valor == 11) {
					return "Caballo" + "de" + palo
				}
				else {
					return "Rey" + "de" + palo
				}
			}
		}
	}
}
